{"version":3,"sources":["assets/images/bgc.jpg","components/Login.js","components/Header.js","assets/icons/icons.js","components/Team.js","components/search/Cards.js","components/search/Search.js","components/search/Pagination.js","components/Home.js","App.js","index.js"],"names":["Container","styled","div","LoginForm","form","props","background","InputContainer","LogoContainer","HeaderContainer","Button","button","Login","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","token","localStorage","setItem","push","placeholder","type","value","onChange","target","Navbar","nav","NavbarItems","ul","hamburger","Hamburger","Header","setHamburger","to","spy","smooth","offset","duration","onClick","removeItem","icons","icon","description","h2","HerosWrapper","HerosGoodWrapper","HerosBadWrapper","HeroCard","alignment","HeroStats","HeroStatistics","TeamHighestStat","HeroAppearanceStats","HeroPowersStats","Team","team","setTeam","goodCounting","badCounting","powerStatsIcons","heroes","intelligence","strength","speed","durability","power","combat","teamPowerStats","setTeamPowerStats","height","weight","teamAppearance","setTeamAppearance","sortStats","Object","entries","map","sort","a","b","uploadStats","stat","element","powerstats","filter","reduce","acc","val","parseInt","length","handleRemoveTeam","hero_","hero","biography","counting","uploadAppearance","app","letters","appearance","join","split","includes","sum","useEffect","id","name","src","image","url","alt","width","Math","round","CardWrapper","CardExit","p","CardName","CardImage","CardAppearance","CardPowerStats","StatsWrapper","AlignmentWrapper","textColor","AddButton","Warning","Cards","showDetails","addTeam","values","ResultsContainer","SearchDefault","Search","results","setShowDetails","cardDetails","setcardDetails","showCardDetails","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","ceil","number","href","HomeContainer","SearchForm","SearchWrapper","StatIcons","StatBar","widthBar","Home","setName","heros","setHeros","currentPage","setCurrentPage","setGoodCounting","setBadCounting","indexOfLastPost","indexOfFirstPost","label","title","slice","forEach","concat","pageNumber","App","AuthenticatedRoute","getItem","className","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c162f83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bgc.d3286962.jpg\";","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport background from \"../assets/images/bgc.jpg\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://challenge-react.alkemy.org/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.token) {\r\n          localStorage.setItem(\"key\", data.token);\r\n          history.push(\"/\");\r\n        } else {\r\n          setError(data.error);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container background={background}>\r\n      <LoginForm onSubmit={handleSubmit} background={background}>\r\n        <LogoContainer>\r\n          <h1>SuperHero Legends</h1>\r\n        </LogoContainer>\r\n        <HeaderContainer>\r\n          <h2>Sign In</h2>\r\n        </HeaderContainer>\r\n        <InputContainer>\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </InputContainer>\r\n\r\n        <span>{error}</span>\r\n        <Button type=\"submit\">Login</Button>\r\n      </LoginForm>\r\n  </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: var(--black);\r\n  background-position: center center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  width: 500px;\r\n  height: 700px;\r\n  grid-column: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  padding: 100px;\r\n  background: url(${(props) => props.background});\r\n  background-size: cover;\r\n  color: var(--white);\r\n  box-shadow: 0px 8px 15px 0px #000000;\r\n  border-radius: 15px;\r\n  background-repeat: no-repeat;\r\n  text-align: center;\r\n\r\n  span{\r\n    color:red;\r\n  }\r\n\r\n  @media (max-width:600px){\r\n    width:300px;\r\n    height:500px;\r\n    padding:50px;\r\n  }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  input {\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    margin: 10px 0px;\r\n    border-radius: 10px;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst LogoContainer = styled.div`\r\n  text-align: center;\r\n  color:var(--white);\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  h2 {\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    color: var(--white);\r\n    font-size: 23px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  background-color: var(--orange);\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: var(--white);\r\n  transition: 300ms ease-in-out;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Login;\r\n","import React,{useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Link} from 'react-scroll'\r\nimport {GiHamburgerMenu} from 'react-icons/gi'\r\nimport {IoMdCloseCircle} from 'react-icons/io'\r\n\r\nconst Header = () => {\r\n    \r\n    const[hamburger, setHamburger] = useState(false)\r\n    let history = useHistory();\r\n\r\n    const handleLogout = () =>{\r\n        localStorage.removeItem('key')\r\n        history.push('/login')\r\n    }\r\n    \r\n    return (\r\n        <Navbar>\r\n            <LogoContainer>\r\n                <h2>\r\n                    <Link\r\n                        to=\"search\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-100}\r\n                        duration={500}\r\n                    >\r\n                        SuperHero Legends\r\n                    </Link>\r\n                </h2>\r\n            </LogoContainer>\r\n            <NavbarItems hamburger={hamburger}>\r\n                <li\r\n                >\r\n                    <Link\r\n                        to=\"team\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-100}\r\n                        duration={500}\r\n                        onClick={() => hamburger && setHamburger(false)}\r\n                    >\r\n                            My Team\r\n                    </Link>\r\n                </li>\r\n                <li\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </li>\r\n            </NavbarItems>\r\n            <Hamburger onClick={() => setHamburger(!hamburger)}>\r\n                {\r\n                    hamburger ?\r\n\r\n                    <IoMdCloseCircle/> :\r\n                    <GiHamburgerMenu/>\r\n                }\r\n            </Hamburger>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst Navbar = styled.nav`\r\n    position:fixed;\r\n    grid-column:1 / span 4;\r\n    height:7vh;\r\n    display:flex;\r\n    width:100%;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    background-color: var(--black);\r\n    padding:0 30px;\r\n    z-index: 99;\r\n`\r\n\r\nconst LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    color:var(--white);\r\n    font-size:15px;\r\n    cursor: pointer;\r\n`\r\n\r\nconst NavbarItems = styled.ul`\r\n    display:flex;\r\n    list-style:none;\r\n    text-align: center;\r\n    li{\r\n\r\n        color:var(--white);\r\n        padding:10px 20px;\r\n        a{\r\n            cursor:pointer;\r\n            text-decoration:none;\r\n            color:var(--white);\r\n        }\r\n\r\n        :nth-child(2){\r\n            background-color: var(--orange);\r\n            border-radius:10px;\r\n            cursor:pointer;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @media (max-width:600px){\r\n        height: 100vh;\r\n        width:50%;\r\n        position: absolute;\r\n        right:${props => props.hamburger ? '0' : '-100%'};\r\n        top:100%;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        background-color: var(--menu-color);\r\n        transition:300ms ease-in-out;\r\n        font-size:25px;\r\n        padding:0px 10px;\r\n    }\r\n\r\n`\r\n\r\nconst Hamburger = styled.div`\r\n    display: none;\r\n    color:var(--white);\r\n    cursor:pointer;\r\n\r\n    svg{\r\n        font-size:25px;\r\n    }\r\n    \r\n    @media (max-width:600px){\r\n        display: block;\r\n    }\r\n\r\n\r\n`\r\n\r\nexport default Header\r\n","import {GiBattleAxe, GiShieldImpact, GiBrain, GiPowerLightning,  GiMuscleUp} from 'react-icons/gi'\r\nimport {FaRunning} from 'react-icons/fa'\r\n\r\nexport const icons = [\r\n    {\r\n        icon : <GiBattleAxe/>,\r\n        description: 'combat'\r\n    },\r\n    {\r\n        icon : <GiShieldImpact/>,\r\n        description: 'durability'\r\n    },\r\n    {\r\n        icon : <GiBrain/>,\r\n        description:'intelligence'\r\n    },\r\n    {\r\n        icon : <GiPowerLightning/>,\r\n        description:'power'\r\n    },\r\n    {\r\n        icon : <FaRunning/>,\r\n        description : 'speed'\r\n    },\r\n    {\r\n        icon : <GiMuscleUp/>,\r\n        description : 'strength'\r\n    }\r\n]\r\n","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport {icons} from '../assets/icons/icons.js'\r\n\r\nconst Team = ({team, setTeam, goodCounting, badCounting, powerStatsIcons}) => {\r\n\r\n    const heroes = [...team]\r\n\r\n    const [teamPowerStats, setTeamPowerStats] = useState({\r\n        intelligence:0,\r\n        strength:0,\r\n        speed:0,\r\n        durability:0,\r\n        power:0,\r\n        combat:0\r\n    })\r\n\r\n    const [teamAppearance, setTeamAppearance] = useState ({\r\n        height:0,\r\n        weight:0\r\n    })\r\n\r\n    const sortStats = Object.entries(teamPowerStats).map(([label,value]) => ([label,value])).sort((a,b) => b[1] - a[1])\r\n\r\n    const uploadStats = (stat) => {\r\n        const powerStat = heroes.map(element => element.powerstats[stat])\r\n        .filter(stat => stat !== 'null')\r\n        .reduce((acc, val) => parseInt(acc) + parseInt(val) / heroes.length, 0);\r\n        return powerStat;\r\n    }\r\n    \r\n    const handleRemoveTeam = (hero_) => {\r\n        setTeam(team => team.filter((hero) => hero_ !== hero))\r\n        hero_.biography.alignment === 'good' ? goodCounting(counting => counting -1) : badCounting(counting => counting -1);\r\n    }\r\n\r\n    const uploadAppearance = (app) => {\r\n        const letters = ['k','g','c','m'];\r\n        const value = heroes.map(element => element.appearance[app][1])\r\n        .join('')\r\n        .split('')\r\n        .filter(element => !letters.includes(element))\r\n        .join('')\r\n        .split(' ')\r\n        .filter(element => element !== '')\r\n        .reduce((acc, sum) => parseInt(acc) + parseInt(sum) / team.length, 0)\r\n        return value;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTeamPowerStats({\r\n            intelligence : uploadStats('intelligence'),\r\n            strength : uploadStats('strength'),\r\n            speed : uploadStats('speed'),\r\n            durability : uploadStats('durability'),\r\n            power : uploadStats('power'),\r\n            combat : uploadStats('combat')\r\n        });\r\n\r\n        setTeamAppearance({\r\n            height: uploadAppearance('height'),\r\n            weight: uploadAppearance('weight')\r\n\r\n        })\r\n\r\n    }, [team])\r\n\r\n    return (\r\n        <Container id=\"team\">\r\n            <Header>\r\n                My Team\r\n            </Header>\r\n            <HerosWrapper>\r\n                <HerosGoodWrapper>                 \r\n                    {\r\n                        team.map(element => (\r\n                            element.biography.alignment === 'good' &&\r\n                                <HeroCard alignment = {element.biography.alignment}>\r\n                                    <h3>{element.name}</h3>\r\n                                    <img src={element.image.url} alt=\"\" width=\"200px\" height=\"300px\"/>\r\n                                    <button\r\n                                        onClick={() => handleRemoveTeam(element)}\r\n                                    >\r\n                                        Remove\r\n                                    </button>\r\n                                </HeroCard>\r\n                            \r\n                        ))\r\n                    }\r\n                </HerosGoodWrapper>\r\n                <HerosBadWrapper>\r\n                    {\r\n                        team.map(element => (\r\n                            element.biography.alignment === 'bad' &&\r\n                                <HeroCard alignment = {element.biography.alignment}>\r\n                                    <h3>{element.name}</h3>\r\n                                    <img src={element.image.url} alt=\"\" width=\"200px\" height=\"300px\"/>\r\n                                    <button\r\n                                        onClick={() => handleRemoveTeam(element)}\r\n                                    >\r\n                                        Remove\r\n                                    </button>\r\n                                </HeroCard>\r\n                            \r\n                        ))\r\n                    }    \r\n                </HerosBadWrapper>   \r\n            </HerosWrapper>\r\n            <HeroStats>\r\n                \r\n                    {\r\n                        team.length >= 1 &&\r\n                        <HeroStatistics>\r\n                            <TeamHighestStat>\r\n                                {\r\n                                    <h3>Your Team highest stat is <span>{sortStats[0][0]}</span></h3>\r\n                                }\r\n                            </TeamHighestStat>\r\n                            <HeroPowersStats>\r\n                                {\r\n                                    powerStatsIcons(icons, teamPowerStats)\r\n                                }\r\n                            </HeroPowersStats>\r\n                            <HeroAppearanceStats>\r\n                                {\r\n                                    <div>\r\n                                        <span>{Math.round(teamAppearance.height)} cm</span>\r\n                                        <span>{Math.round(teamAppearance.weight)} kg</span>\r\n                                    </div>\r\n                                    \r\n                                }\r\n                            </HeroAppearanceStats>\r\n                        </HeroStatistics>\r\n\r\n                    }\r\n                    \r\n                \r\n            </HeroStats>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    min-height:600px;\r\n    display:grid;\r\n    grid-template-columns:100px repeat(2,1fr) 100px;\r\n    padding:50px 0px;\r\n    background-color: var(--black);\r\n    outline:1px solid white;\r\n    align-items:center;\r\n\r\n    @media (max-width:1024px){\r\n        display: block;\r\n        padding:50px 100px;\r\n    }\r\n\r\n    @media (max-width:600px){\r\n        padding:50px 30px;\r\n    }\r\n`\r\n\r\nconst Header = styled.h2`\r\n    grid-column:2 / span 4;\r\n    justify-self:center;\r\n    color:white;\r\n    margin-bottom:20px;\r\n    text-align: center;\r\n`\r\n\r\nconst HerosWrapper = styled.div`\r\n    grid-column:2;\r\n    display:grid;\r\n    grid-template-columns:repeat(3,1fr);\r\n    gap:20px;\r\n    color:white;\r\n\r\n    @media(max-width:1024px){\r\n        display:flex;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst HerosGoodWrapper = styled.div`\r\n    grid-row:1;\r\n    display:flex;\r\n    \r\n    @media(max-width:1024px){\r\n        flex-direction: column;\r\n        > div{\r\n            margin-bottom:20px;\r\n        }\r\n        \r\n    }\r\n`\r\n\r\nconst HerosBadWrapper = styled.div`\r\n    grid-row:2;\r\n    display:flex;\r\n    \r\n    @media(max-width:1024px){\r\n        flex-direction: column;\r\n        > div{\r\n            margin-bottom:20px;\r\n        }\r\n        \r\n    }\r\n`\r\n\r\nconst HeroCard = styled.div`\r\n    padding:20px;\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    border-radius:5px;\r\n    margin:0px 20px;\r\n    background: ${props => props.alignment !== 'bad' ? 'linear-gradient(90deg, rgba(37,82,59,1) 0%, rgba(60,208,112,1) 50%, rgba(37,82,59,1) 100%)' : 'linear-gradient(90deg, rgba(158,26,26,1) 0%, rgba(255,0,0,1) 50%, rgba(158,26,26,1) 100%)'};\r\n    img{\r\n        padding:20px 0px;\r\n    }\r\n\r\n    button{\r\n        padding:10px 20px;\r\n        cursor:pointer;\r\n        background:var(--darkest-blue);\r\n        border:none;\r\n        color:var(--white);\r\n        border-radius:4px;\r\n    }\r\n`\r\n\r\nconst HeroStats = styled.div`\r\n    grid-column:3;\r\n    color:white;\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\n\r\nconst HeroStatistics = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n\r\n    h3{\r\n        span{\r\n            color:var(--orange);\r\n            text-transform: capitalize;\r\n        }\r\n    }\r\n    \r\n`\r\n\r\nconst TeamHighestStat = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    margin-bottom:10px;\r\n\r\n`\r\n\r\nconst HeroAppearanceStats = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n\r\n    div{\r\n        span{\r\n            margin-right:10px;\r\n        }\r\n    }\r\n`\r\n\r\nconst HeroPowersStats = styled.div`\r\n    width:70%;\r\n    margin: auto;\r\n\r\n    > div {\r\n        margin-bottom:10px;\r\n    }\r\n`\r\n\r\n\r\nexport default Team\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {icons} from '../../assets/icons/icons'\r\n\r\nconst Cards = ({hero, showDetails, addTeam, team, badCounting, goodCounting, powerStatsIcons}) => {\r\n\r\n    const appearance = Object.entries(hero.appearance) \r\n    const MAX_TEAM_SIZE = 6;\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <CardWrapper>\r\n                <CardExit\r\n                    onClick={() => showDetails(false)}\r\n                >\r\n                    x\r\n                </CardExit>\r\n                <CardName>\r\n                    <h2>{hero.name}</h2>\r\n                    <h3>{Object.values(hero.biography)[0]!== '' && Object.values(hero.biography)[0]}</h3>\r\n                </CardName>\r\n                <CardImage>\r\n                    <img src={hero.image.url} alt=\"\" width=\"200px\" height=\"250px\"/>\r\n                </CardImage>\r\n                <AlignmentWrapper background ={hero.biography.alignment === 'good' ? 'green' : hero.biography.alignment === 'neutral' ? 'var(--gray)' :'red' }>\r\n                    <p  >\r\n                        {hero.biography.alignment}\r\n                    </p>\r\n                </AlignmentWrapper>\r\n                <CardAppearance>\r\n                    {\r\n                        appearance.map(element => (\r\n                            <div>\r\n                                <h3>{element[0]}: </h3>\r\n                                <p>{element[1][2] ? element[1] : element[1][1]}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                </CardAppearance>\r\n                <CardPowerStats>\r\n\r\n                    <StatsWrapper>\r\n                        {\r\n                            powerStatsIcons(icons, hero.powerstats)\r\n                        }\r\n                    </StatsWrapper>\r\n                    \r\n                </CardPowerStats>\r\n                \r\n                <AddButton\r\n                    onClick={() => addTeam(hero)}\r\n                >\r\n                    {\r\n                        team.length >= MAX_TEAM_SIZE && !team.includes(hero)  ? 'Team is full' \r\n                        : team.includes(hero) ? \r\n                        'Delete' : 'Add' \r\n                    }\r\n                </AddButton>\r\n                <Warning>\r\n                    <p>\r\n\r\n                    {\r\n                        hero.biography.alignment === 'good' && goodCounting >= 3 ? \r\n                        'You already have three Good Heros.' \r\n                        : hero.biography.alignment === 'bad' && badCounting >= 3 ? \r\n                        'You already have three Bad Heroes. ' \r\n                        : hero.biography.alignment === 'neutral' && \r\n                        \"You can't add neutral heroes to your team.\"\r\n                    }\r\n                    </p>\r\n\r\n                </Warning>\r\n            </CardWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    height:100%;\r\n    width:100%;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    color:white;\r\n    background-color:rgba(0, 0, 0, 0.5) ;\r\n    \r\n    @media (max-width:600px){\r\n        padding:0px 20px;\r\n    }\r\n`\r\n\r\nconst CardWrapper = styled.div`\r\n    max-height:850px;\r\n    width:500px;\r\n    display:grid;\r\n    grid-template-columns:repeat(2,1fr);\r\n    gap:20px;\r\n    background-color: var(--black);\r\n    border:2px solid var(--blue);\r\n    border-radius:15px;\r\n    padding:30px;\r\n    position:relative;\r\n\r\n    @media (max-width:600px){\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding:10px;\r\n    }\r\n`\r\n\r\nconst CardExit = styled.p`\r\n    position:absolute;\r\n    right:10px;\r\n    top:0;\r\n    font-size:20px;\r\n    cursor:pointer;\r\n`\r\nconst CardName = styled.div`\r\n    grid-column:1 / span 2;\r\n    grid-row:2;\r\n    font-size:22px;\r\n    display: flex;\r\n    flex-direction:column;\r\n\r\n    h3{\r\n        color:var(--orange);\r\n        font-size:13px;\r\n    }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n    grid-row:1;\r\n    grid-column:1 / span 2 ;\r\n    align-self:center;\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    img{\r\n        border-radius:50%;\r\n        object-fit:cover;\r\n\r\n        @media (max-width:600px){\r\n            width:100px;\r\n            height:120px;\r\n        }\r\n    }\r\n`\r\n\r\nconst CardAppearance = styled.div`\r\n    display:flex;\r\n    grid-column:1 / span 2;\r\n    grid-row:4;\r\n    color:black;\r\n    flex-direction:column;\r\n    text-transform:capitalize;\r\n\r\n    h3{\r\n        color:var(--orange);\r\n\r\n    }\r\n    p{\r\n        color:var(--white);\r\n    }\r\n    div{\r\n        display:flex;\r\n        justify-content:space-between;\r\n        font-size:12px;\r\n    }\r\n`\r\n\r\nconst CardPowerStats = styled.div`\r\n    grid-column:1 / span 2;\r\n    display:flex;\r\n    align-items:center;\r\n\r\n    > div > *{\r\n        margin:5px 10px 5px 0px;\r\n\r\n    }\r\n`\r\n\r\nconst StatsWrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:100%;\r\n\r\n`\r\n\r\n\r\n\r\nconst AlignmentWrapper = styled.div`\r\n    grid-row:3;\r\n    grid-column:1 / span 2;\r\n    display:flex;\r\n    justify-content:flex-end;\r\n    color:${props => props.textColor};  \r\n    p{\r\n        text-transform:capitalize;\r\n        background-color: ${props => props.background};\r\n        padding:10px;\r\n        border-radius:50px;\r\n    }\r\n\r\n    \r\n`\r\n\r\nconst AddButton = styled.button`\r\n    grid-column: 1/ span 2;\r\n    width:50%;\r\n    justify-self:center;\r\n    background-color: var(--orange);\r\n    border:none;\r\n    color:var(--white);\r\n    padding:10px 20px;\r\n    border-radius:10px;\r\n    cursor:pointer;\r\n    transition:300ms ease-in-out;\r\n    align-self: center;\r\n`\r\n\r\nconst Warning = styled.div`\r\n    grid-column: 1 / span 2;\r\n    display: flex;\r\n    justify-content: center;\r\n    color:red;\r\n    text-align: center;\r\n`\r\n\r\nexport default Cards\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Cards from './Cards'\r\nimport {Link} from 'react-scroll'\r\n\r\nconst Search = ({results, addTeam, team, goodCounting, badCounting, powerStatsIcons}) => {\r\n    \r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const[cardDetails, setcardDetails] = useState([]);\r\n\r\n    const showCardDetails = (hero) => {\r\n        setcardDetails(hero)\r\n        setShowDetails(true)\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container>\r\n            <ResultsContainer>\r\n                {\r\n                    results ? (\r\n                        results.map(hero => (\r\n                            <HeroCard>\r\n                                <h3>{hero.name}</h3>\r\n                                <img src={hero.image.url} alt=\"\" width=\"200px\" height=\"250px\"/>\r\n                                <Link\r\n                                    to=\"center\"\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    offset={-500}\r\n                                    duration={500}\r\n                                    >\r\n                                        <Button\r\n                                            onClick={() => showCardDetails(hero)}\r\n                                        >\r\n                                            Show Details\r\n                                        </Button>\r\n                                </Link>\r\n                            </HeroCard>\r\n                        ))\r\n                    ) : <SearchDefault>\r\n                            <h3>Heros will be here...</h3>\r\n                        </SearchDefault>\r\n                    \r\n                }\r\n                {\r\n                    showDetails && (\r\n                        <Cards \r\n                            hero={cardDetails}\r\n                            showDetails = {setShowDetails}\r\n                            addTeam={addTeam}\r\n                            team = {team}\r\n                            goodCounting ={goodCounting}\r\n                            badCounting = {badCounting}\r\n                            powerStatsIcons={powerStatsIcons}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <div id=\"center\"/>\r\n            </ResultsContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display:grid;\r\n    grid-template-columns:150px 1fr 150px;\r\n    margin:30px 0px;\r\n    position:relative;\r\n\r\n    @media (max-width:600px){\r\n        display: block;\r\n    }\r\n`\r\n\r\nconst ResultsContainer = styled.div`\r\n    grid-column:2;\r\n    display:grid;\r\n    grid-template-columns: repeat(4,1fr);\r\n    gap:20px;\r\n    justify-items:center;\r\n\r\n    #center{\r\n        position:absolute;\r\n        left:50%;\r\n        top:50%;\r\n        color:white;\r\n    }\r\n\r\n    @media (max-width:1024px){\r\n        grid-template-columns: repeat(2,1fr);\r\n    }\r\n\r\n    @media (max-width:600px){\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding:0px 30px;\r\n    }\r\n`\r\n\r\nconst HeroCard = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    padding:30px;\r\n    background-color: var(--black);\r\n    border-radius:8px;\r\n    color:var(--white);\r\n\r\n        img{\r\n            margin:10px 0px;\r\n        }\r\n    \r\n    @media (max-width:600px){\r\n        padding:30px;\r\n    }\r\n`\r\n\r\nconst Button = styled.button`\r\n    padding:10px 30px;\r\n    outline:none;\r\n    border:none;\r\n    background-color: var(--orange);\r\n    color:white;\r\n    cursor:pointer;\r\n    border-radius:5px;\r\n`\r\n\r\nconst SearchDefault = styled.div`\r\n    grid-column:1 / span 4;\r\n    color:var(--white);\r\n    text-align: center;\r\n`\r\nexport default Search\r\n","import React,{useState} from \"react\";\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <ul>\r\n        {pageNumbers.map((number) => (\r\n          <li key={number}>\r\n            <a onClick={() => paginate(number)} href=\"#\" >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.nav`\r\n    grid-column:2;\r\n    background-color: var(--darkest-blue);\r\n    ul{\r\n        display:flex;\r\n        justify-content:center;\r\n        flex-wrap:wrap;\r\n        list-style:none;\r\n        li{\r\n            padding:20px;\r\n\r\n            a{\r\n                color:var(--orange);\r\n                font-weight:800;\r\n                text-decoration:none;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default Pagination;\r\n","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport Header from './Header'\r\nimport Team from './Team'\r\nimport {BsSearch} from 'react-icons/bs'\r\nimport Search from './search/Search'\r\nimport Pagination from './search/Pagination'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const[name, setName] = useState('')\r\n    const[heros, setHeros] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(12);\r\n    const [team, setTeam] = useState([]);\r\n    const [goodCounting, setGoodCounting] = useState(0)\r\n    const [badCounting, setBadCounting] = useState(0)\r\n\r\n    \r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const handleAddTeam = (hero) => {\r\n\r\n        if(!team.includes(hero)){\r\n            Object.values(hero).forEach(element => {\r\n                if(element.alignment === \"good\" && goodCounting < 3){\r\n                    setGoodCounting(goodCounting + 1);\r\n                    setTeam(team.concat(hero));\r\n                }else if(element.alignment === \"bad\" && badCounting < 3){\r\n                    setBadCounting(badCounting + 1);\r\n                    setTeam(team.concat(hero));\r\n                }\r\n            })\r\n            \r\n        }else{\r\n            Object.values(hero).forEach(element => {\r\n                if(element.alignment == \"good\" ){\r\n                    setGoodCounting(goodCounting - 1);\r\n                }else if(element.alignment == \"bad\"){\r\n                    setBadCounting(badCounting - 1);\r\n                }\r\n                \r\n            })\r\n            setTeam(team.filter(element => element !== hero))\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const powerStatsIcons = (icons, powerstats) => {\r\n        const stats = Object.entries(powerstats).map(([label,value]) =>(\r\n            icons.map(element => element.description.includes(label) &&\r\n             <StatIcons title ={label}>\r\n                 {element.icon}\r\n                 <StatBar title={value} widthBar = {`${value}%`}>-</StatBar>\r\n             </StatIcons>\r\n            )\r\n        ))\r\n        \r\n        return stats;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://superheroapi.com/api.php/10219535131153487/search/${name}`,{\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            setHeros(data);\r\n        })\r\n        \r\n    }, [name]);\r\n\r\n\r\n\r\n  \r\n\r\n    return (\r\n        <HomeContainer>\r\n            <Header/>\r\n            <SearchForm id = \"search\">\r\n                <SearchWrapper>\r\n                    <BsSearch/>\r\n\r\n                    <input \r\n                        onChange={(e) => setName(e.target.value)}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a hero\"\r\n                    />\r\n                    {\r\n                        name !== '' ? (\r\n                            <p onClick={() => setName('')}>\r\n                                x\r\n                            </p>\r\n\r\n                        )\r\n                        : ''\r\n                    }\r\n                </SearchWrapper>\r\n                \r\n                \r\n            </SearchForm>\r\n            <Search\r\n                results={heros.results ? heros.results.slice(indexOfFirstPost, indexOfLastPost) : \"\"}\r\n                addTeam ={handleAddTeam}\r\n                team = {team}\r\n                goodCounting = {goodCounting}\r\n                badCounting = {badCounting}\r\n                powerStatsIcons = {powerStatsIcons}\r\n            />\r\n            <Pagination\r\n                postsPerPage={postsPerPage}\r\n                totalPosts = {heros.results ? heros.results.length : \"\"}\r\n                paginate ={paginate}\r\n            />\r\n            <Team\r\n                team ={team}\r\n                setTeam = {setTeam}\r\n                goodCounting ={setGoodCounting}\r\n                badCounting = {setBadCounting}\r\n                powerStatsIcons = {powerStatsIcons}\r\n            />\r\n            \r\n        </HomeContainer>\r\n        \r\n    )\r\n}\r\n\r\nconst HomeContainer = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    min-height:100vh;\r\n    background-color: var(--darkest-blue);\r\n`\r\n\r\nconst SearchForm = styled.form`\r\n    display:flex;\r\n    justify-content:center;\r\n    color:var(--black);\r\n    margin:100px 0px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    background-color: #fff;\r\n    border-radius:5px;\r\n    padding:0px 10px;\r\n    input{\r\n        width:300px;\r\n        color:var(--black);\r\n        border:none;\r\n        outline:none;\r\n        padding:8px 20px;\r\n        position:relative;\r\n\r\n        ::placeholder{\r\n            color:var(--gray);\r\n        }\r\n\r\n        @media (max-width:600px){\r\n            width:200px;\r\n        }\r\n    }\r\n\r\n    p{\r\n        cursor:pointer;\r\n    }\r\n\r\n    svg{\r\n        margin:0px 10px;\r\n        z-index:12;\r\n    }\r\n    \r\n`\r\n\r\nconst StatIcons = styled.div`\r\n    display:flex;\r\n\r\n    svg{\r\n        margin-right: 10px;\r\n    }\r\n`\r\nconst StatBar = styled.div`\r\n    flex:1;\r\n    position:relative;\r\n    width:100%;\r\n    background:var(--lightest-black);\r\n    border-radius:10px;\r\n    \r\n    :before{\r\n        content:\"\";\r\n        position:absolute;\r\n        border-radius:15px;\r\n        height:100%;\r\n        left:0;\r\n        z-index:100;    \r\n        background:var(--orange);\r\n        width:${props => props.widthBar};\r\n    }\r\n\r\n    \r\n`\r\nexport default Home\r\n","import './styles.css'\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\n\n\nfunction App() {\n\n  const AuthenticatedRoute = ({ ...props }) => {\n    const isUserAuthenticated = () => localStorage.getItem('key');\n\n    return (\n      isUserAuthenticated() ? <Route {...props}/> : <Redirect to=\"/Login\" />\n    )\n  }\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={\"/home\"} />\n        </Route>\n        <Route path=\"/login\" component ={Login}/>\n        <AuthenticatedRoute path =\"/home\" component ={Home}/>\n        <Route path=\"*\">\n          <Redirect to ={\"/home\"}/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}