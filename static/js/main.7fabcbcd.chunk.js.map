{"version":3,"sources":["images/bgc.jpg","images/screen.png","components/Login.js","components/Header.js","icons/icons.js","components/search/Cards.js","components/Team.js","components/search/Search.js","components/search/Pagination.js","components/Home.js","App.js","index.js"],"names":["Container","styled","div","LoginForm","form","props","background","InputContainer","LogoContainer","HeaderContainer","Button","button","Login","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","token","localStorage","setItem","push","console","log","bgcLeft","placeholder","type","value","onChange","target","Navbar","nav","NavbarItems","ul","Header","to","spy","smooth","offset","duration","onClick","removeItem","href","icons","icon","CardWrapper","CardExit","p","CardName","CardImage","CardAppearance","CardPowerStats","IconWrapper","StatsWrapper","StatBar","widthBar","AlignmentWrapper","textColor","AddButton","Warning","Cards","hero","showDetails","addTeam","team","badCounting","goodCounting","appearance","Object","entries","powerStats","values","powerstats","id","name","biography","src","image","url","alt","width","height","map","element","alignment","length","includes","Team","ResultsContainer","HeroCard","SearchDefault","Search","results","setShowDetails","cardDetails","setcardDetails","showCardDetails","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","number","HomeContainer","SearchForm","SearchWrapper","Home","setName","heros","setHeros","setLoading","currentPage","setCurrentPage","setTeam","setGoodCounting","setBadCounting","indexOfLastPost","indexOfFirstPost","slice","forEach","filter","concat","pageNumber","App","AuthenticatedRoute","getItem","basename","process","className","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fabcbcd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bgc.d3286962.jpg\";","export default __webpack_public_path__ + \"static/media/screen.510ba44b.png\";","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport bgcLeft from \"../images/bgc.jpg\";\r\nimport background from \"../images/screen.png\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://challenge-react.alkemy.org/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.token) {\r\n          localStorage.setItem(\"key\", data.token);\r\n          history.push(\"/\");\r\n        } else {\r\n          setError(data.error);\r\n        }\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container background={background}>\r\n      <LoginForm onSubmit={handleSubmit} background={bgcLeft}>\r\n        <LogoContainer>\r\n          <h1>SuperHero Legends</h1>\r\n        </LogoContainer>\r\n        <HeaderContainer>\r\n          <h2>Sign In</h2>\r\n        </HeaderContainer>\r\n        <InputContainer>\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </InputContainer>\r\n\r\n        <span>{error}</span>\r\n        <Button type=\"submit\">Login</Button>\r\n      </LoginForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: var(--black);\r\n  background-position: center center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  width: 500px;\r\n  height: 700px;\r\n  grid-column: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  padding: 100px;\r\n  background: url(${(props) => props.background});\r\n  background-size: cover;\r\n  color: var(--white);\r\n  box-shadow: 0px 8px 15px 0px #000000;\r\n  border-radius: 15px;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  input {\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    margin: 10px 0px;\r\n    border-radius: 10px;\r\n    border: none;\r\n    outline: none;\r\n    :focus {\r\n      border: 1px solid var(--pink);\r\n    }\r\n  }\r\n`\r\n\r\nconst LogoContainer = styled.div`\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  h2 {\r\n    color: var(--pink);\r\n    font-size: 23px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  grid-column: 1;\r\n  grid-row: 1;\r\n  background: url(${(props) => props.background});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  box-shadow: 0px 8px 15px 0px #000000;\r\n`;\r\n\r\nconst TextLogin = styled.div`\r\n  color: var(--white);\r\n  text-align: center;\r\n  width: 80%;\r\n  h2 {\r\n    margin: 10px 0px;\r\n    font-size: 30px;\r\n    text-shadow: 0px 0px 10px var(--black);\r\n  }\r\n\r\n  p {\r\n    font-size: 20px;\r\n    text-shadow: 0px 0px 10px var(--black);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  background-color: var(--pink);\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: var(--white);\r\n  transition: 300ms ease-in-out;\r\n  cursor: pointer;\r\n  :hover {\r\n    background: var(--pink-hover);\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Link,animateScroll as scroll} from 'react-scroll'\r\n\r\nconst Header = () => {\r\n    let history = useHistory();\r\n\r\n    const handleLogout = () =>{\r\n        localStorage.removeItem('key')\r\n        history.push('/login')\r\n    }\r\n    \r\n    return (\r\n        <Navbar>\r\n            <LogoContainer>\r\n                <h2>SuperHero Legends</h2>\r\n            </LogoContainer>\r\n            <NavbarItems>\r\n                <li>\r\n                    <Link\r\n                        to=\"home\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-100}\r\n                        duration={500}\r\n                        >\r\n                            Home\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"team\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-100}\r\n                        duration={500}\r\n                        >\r\n                            My Team\r\n                    </Link>\r\n                </li>\r\n                <li\r\n                    onClick={handleLogout}\r\n                ><a href=\"#\">Logout</a></li>\r\n            </NavbarItems>\r\n\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst Navbar = styled.nav`\r\n    grid-column:1 / span 4;\r\n    height:7vh;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    background-color: var(--black);\r\n    padding:0 30px;\r\n`\r\n\r\nconst LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    color:var(--white);\r\n`\r\n\r\nconst NavbarItems = styled.ul`\r\n    display:flex;\r\n    list-style:none;\r\n\r\n    li{\r\n\r\n        color:var(--white);\r\n        padding:10px 20px;\r\n        a{\r\n            cursor:pointer;\r\n            text-decoration:none;\r\n            color:var(--white);\r\n        }\r\n\r\n        :nth-child(3n){\r\n            background-color: var(--pink);\r\n            border-radius:10px;\r\n            cursor:pointer;\r\n        }\r\n\r\n    }\r\n\r\n\r\n`\r\n\r\nexport default Header\r\n","import {GiBattleAxe, GiShieldImpact, GiBrain, GiPowerLightning,  GiMuscleUp} from 'react-icons/gi'\r\nimport {FaRunning} from 'react-icons/fa'\r\n\r\nexport const icons = [\r\n    {\r\n        icon : <GiBattleAxe/>\r\n    },\r\n    {\r\n        icon : <GiShieldImpact/>\r\n    },\r\n    {\r\n        icon : <GiBrain/>\r\n    },\r\n    {\r\n        icon : <GiPowerLightning/>\r\n    },\r\n    {\r\n        icon : <FaRunning/>\r\n    },\r\n    {\r\n        icon : <GiMuscleUp/>\r\n    }\r\n]\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {icons} from '../../icons/icons'\r\n\r\nconst Cards = ({hero, showDetails, addTeam, team, badCounting, goodCounting}) => {\r\n    const appearance = Object.entries(hero.appearance) \r\n    const powerStats = Object.values(hero.powerstats) \r\n\r\n\r\n    console.log(powerStats)\r\n\r\n    return (\r\n        <Container id=\"card\">\r\n            <CardWrapper>\r\n                <CardExit\r\n                    onClick={() => showDetails(false)}\r\n                >\r\n                    x\r\n                </CardExit>\r\n                <CardName>\r\n                    <h2>{hero.name}{Object.values(hero.biography)[0]!== '' ? ` (${Object.values(hero.biography)[0]})` : \"\"}</h2>\r\n                </CardName>\r\n                <CardImage>\r\n                    <img src={hero.image.url} alt=\"\" width=\"200px\" height=\"250px\"/>\r\n                </CardImage>\r\n                <CardAppearance>\r\n                    {\r\n                        appearance.map(element => (\r\n                            <div>\r\n                                <h3>{element[0]}: </h3>\r\n                                <p>{element[1][2] ? element[1] : element[1][1]}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                </CardAppearance>\r\n                <CardPowerStats>\r\n                    <IconWrapper>\r\n                        {\r\n                            icons.map(icon =>(\r\n                                <span>{icon.icon}</span>\r\n                            ))\r\n\r\n                        }\r\n                    </IconWrapper>\r\n                    <StatsWrapper>\r\n                        {\r\n                            powerStats.map(element => (\r\n                                <StatBar widthBar = {`${element}%`}>-</StatBar>\r\n                            ))\r\n                        }\r\n                    </StatsWrapper>\r\n                    \r\n                </CardPowerStats>\r\n                <AlignmentWrapper textColor ={hero.biography.alignment === 'good' ? 'var(--green)' : hero.biography.alignment === 'neutral' ? 'var(--gray)' :'red' }>\r\n                    <p  >\r\n                        {hero.biography.alignment}\r\n                    </p>\r\n                </AlignmentWrapper>\r\n                <AddButton\r\n                    onClick={() => addTeam(hero)}\r\n                >\r\n                    {\r\n                        team.length >= 6 && !team.includes(hero)  ? 'Team is full' \r\n                        : team.includes(hero) ? \r\n                        'Delete' : 'Add' \r\n                    }\r\n                </AddButton>\r\n                <Warning>\r\n                    {\r\n                        goodCounting >= 3 ? 'You already have three Good Heros.' : badCounting >= 3 ? 'You already have three Bad Heroes. ' : \"\"\r\n                    }\r\n                </Warning>\r\n            </CardWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    height:100%;\r\n    width:100%;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    color:white;\r\n    background-color:rgba(0, 0, 0, 0.5) ;\r\n`\r\n\r\nconst CardWrapper = styled.div`\r\n    display:grid;\r\n    grid-template-columns:repeat(2,1fr);\r\n    gap:20px;\r\n    background-color: var(--pink);\r\n    border:4px solid var(--pink-hover);\r\n    padding:30px;\r\n    position:relative;\r\n\r\n`\r\n\r\nconst CardExit = styled.p`\r\n    position:absolute;\r\n    right:10px;\r\n    top:0;\r\n    font-size:20px;\r\n    cursor:pointer;\r\n`\r\nconst CardName = styled.div`\r\n    grid-column:1 / span 2;\r\n    font-size:15px;\r\n`\r\n\r\nconst CardImage = styled.div`\r\n    grid-row:2 / span 2;\r\n    align-self:center;\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    align-items:center;\r\n\r\n    img{\r\n        object-fit:cover;\r\n    }\r\n`\r\n\r\nconst CardAppearance = styled.div`\r\n    display:flex;\r\n    color:black;\r\n    flex-direction:column;\r\n    text-transform:capitalize;\r\n    div{\r\n        display:flex;\r\n        justify-content:space-between;\r\n        font-size:12px;\r\n    }\r\n`\r\n\r\nconst CardPowerStats = styled.div`\r\n    grid-column:2;\r\n    display:flex;\r\n    align-items:center;\r\n\r\n    > div > *{\r\n        margin:5px 10px 5px 0px;\r\n\r\n    }\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n\r\n    span{\r\n        color:var(--darkest-blue);\r\n    }\r\n`\r\n\r\nconst StatsWrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:100%;\r\n`\r\n\r\nconst StatBar = styled.div`\r\n\r\n    flex:1;\r\n    position:relative;\r\n    width:100%;\r\n    background:var(--gray);\r\n    border-radius:10px;\r\n    :before{\r\n        content:\"\";\r\n        position:absolute;\r\n        border-radius:15px;\r\n        height:100%;\r\n        left:0;\r\n        z-index:100;    \r\n        background:red;\r\n        width:${props => props.widthBar};\r\n    }\r\n\r\n    :first-child:before{\r\n        background:var(--combat);\r\n    }\r\n    :nth-child(2):before{\r\n        background:var(--durability);\r\n    }\r\n    :nth-child(3):before{\r\n        background-color: var(--purple);\r\n    }\r\n    :nth-child(4):before{\r\n        background-color: var(--power);\r\n    }\r\n    :nth-child(5):before{\r\n        background-color: #72151d;\r\n    }\r\n`\r\n\r\nconst AlignmentWrapper = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:flex-end;\r\n    color:${props => props.textColor};  \r\n\r\n    p{\r\n        text-transform:capitalize;\r\n    }\r\n`\r\n\r\nconst AddButton = styled.button`\r\n    width:50%;\r\n    justify-self:center;\r\n    background-color: var(--darkest-blue);\r\n    border:none;\r\n    color:var(--white);\r\n    padding:10px 20px;\r\n    border-radius:10px;\r\n    cursor:pointer;\r\n    transition:300ms ease-in-out;\r\n    :hover{\r\n        background-color: var(--black);\r\n    }\r\n`\r\n\r\nconst Warning = styled.p`\r\n    color:red;\r\n`\r\n\r\nexport default Cards\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Cards from './search/Cards'\r\n\r\nconst Team = ({team}) => {\r\n    return (\r\n        <Container id=\"team\">\r\n            Equipo: \r\n            {\r\n                team.map(element => (\r\n                    <div>\r\n                        <span>{element.name}</span>\r\n                        <img src={element.image.url} alt=\"\"/>\r\n                    </div>\r\n                    \r\n                ))\r\n            }   \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    background-color: red;\r\n`\r\n\r\nexport default Team\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Cards from './Cards'\r\nimport {Link,animateScroll as scroll} from 'react-scroll'\r\n\r\nconst Search = ({results, addTeam, team, goodCounting, badCounting}) => {\r\n    \r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const[cardDetails, setcardDetails] = useState([]);\r\n\r\n    const showCardDetails = (hero) => {\r\n        setcardDetails(hero)\r\n        setShowDetails(true)\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container>\r\n            <ResultsContainer>\r\n                {\r\n                    results ? (\r\n                        results.map(hero => (\r\n                            <HeroCard>\r\n                                <h3>{hero.name}</h3>\r\n                                <img src={hero.image.url} alt=\"\" width=\"200px\" height=\"250px\"/>\r\n                                <Button\r\n                                    onClick={() => showCardDetails(hero)}\r\n                                >\r\n                                    Show Details\r\n                                </Button>\r\n                            </HeroCard>\r\n                        ))\r\n                    ) : <SearchDefault>\r\n                            <h3>Heros will be here...</h3>\r\n                        </SearchDefault>\r\n                    \r\n                }\r\n                {\r\n                    showDetails && (\r\n                        <Cards \r\n                            hero={cardDetails}\r\n                            showDetails = {setShowDetails}\r\n                            addTeam={addTeam}\r\n                            team = {team}\r\n                            goodCounting ={goodCounting}\r\n                            badCounting = {badCounting}\r\n                        />\r\n                    )\r\n                }\r\n            </ResultsContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display:grid;\r\n    grid-template-columns:150px 1fr 150px;\r\n    margin:30px 0px;\r\n    position:relative;\r\n`\r\n\r\nconst ResultsContainer = styled.div`\r\n    grid-column:2;\r\n    display:grid;\r\n    grid-template-columns: repeat(4,1fr);\r\n    gap:20px;\r\n    justify-items:center;\r\n`\r\n\r\nconst HeroCard = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    padding:30px;\r\n    border:4px solid var(--pink-hover);\r\n    background-color: var(--pink);\r\n    border-radius:8px;\r\n\r\n        img{\r\n            margin:10px 0px;\r\n        }\r\n    \r\n`\r\n\r\nconst Button = styled.button`\r\n    padding:10px 30px;\r\n    outline:none;\r\n    border:none;\r\n    background-color: var(--darkest-blue);\r\n    color:white;\r\n    cursor:pointer;\r\n    border-radius:5px;\r\n`\r\n\r\nconst SearchDefault = styled.div`\r\n    grid-column:1 / span 4;\r\n    color:var(--white);\r\n`\r\nexport default Search\r\n","import React,{useState} from \"react\";\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n\r\n  const [clicked, setClicked] = useState(false)\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <ul>\r\n        {pageNumbers.map((number) => (\r\n          <li key={number}>\r\n            <a onClick={() => paginate(number)} href=\"#\" >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.nav`\r\n    grid-column:2;\r\n    background-color: var(--darkest-blue);\r\n    ul{\r\n        display:flex;\r\n        justify-content:center;\r\n        flex-wrap:wrap;\r\n        list-style:none;\r\n        li{\r\n            padding:20px;\r\n\r\n            a{\r\n                color:var(--pink);\r\n                font-weight:800;\r\n                text-decoration:none;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default Pagination;\r\n","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport Header from './Header'\r\nimport Team from './Team'\r\nimport {BsSearch} from 'react-icons/bs'\r\nimport Search from './search/Search'\r\nimport Pagination from './search/Pagination'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const[name, setName] = useState('')\r\n    const[heros, setHeros] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(12);\r\n    const [team, setTeam] = useState([]);\r\n    const [goodCounting, setGoodCounting] = useState(0)\r\n    const [badCounting, setBadCounting] = useState(0)\r\n\r\n    const handleAddTeam = (hero) => {\r\n        console.log(goodCounting, badCounting)\r\n        if(!team.includes(hero)){\r\n            Object.values(hero).forEach(element => {\r\n                if(element.alignment == \"good\" && goodCounting < 3){\r\n                    setGoodCounting(goodCounting + 1);\r\n                    setTeam(team.concat(hero));\r\n                }else if(element.alignment == \"bad\" && badCounting < 3){\r\n                    setBadCounting(badCounting + 1);\r\n                    setTeam(team.concat(hero));\r\n                }\r\n                \r\n            })\r\n            \r\n        }else{\r\n            Object.values(hero).forEach(element => {\r\n                if(element.alignment == \"good\" ){\r\n                    setGoodCounting(goodCounting - 1);\r\n                }else if(element.alignment == \"bad\"){\r\n                    setBadCounting(badCounting - 1);\r\n                }\r\n                \r\n            })\r\n            setTeam(team.filter(element => element !== hero))\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const handleChange = e =>{\r\n        setName(e.target.value)\r\n        setLoading(true);\r\n        fetch(`https://superheroapi.com/api.php/10219535131153487/search/${name}`,{\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            setHeros(data);\r\n            setLoading(false);\r\n            \r\n        })  \r\n    }\r\n\r\n\r\n  \r\n\r\n    return (\r\n        <HomeContainer id=\"home\">\r\n            <Header/>\r\n            <SearchForm>\r\n                <SearchWrapper>\r\n                    <BsSearch/>\r\n\r\n                    <input \r\n                        onChange={handleChange}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a hero\"\r\n                    />\r\n                    {\r\n                        name !== '' ? (\r\n                            <p onClick={() => setName('')}>\r\n                                x\r\n                            </p>\r\n\r\n                        )\r\n                        : ''\r\n                    }\r\n                </SearchWrapper>\r\n                \r\n                \r\n            </SearchForm>\r\n            <Search\r\n                results={heros.results ? heros.results.slice(indexOfFirstPost, indexOfLastPost) : \"\"}\r\n                addTeam ={handleAddTeam}\r\n                team = {team}\r\n                goodCounting = {goodCounting}\r\n                badCounting = {badCounting}\r\n            />\r\n            <Pagination\r\n                postsPerPage={postsPerPage}\r\n                totalPosts = {heros.results ? heros.results.length : \"\"}\r\n                paginate ={paginate}\r\n            />\r\n            <Team\r\n                team ={team}\r\n            />\r\n            \r\n        </HomeContainer>\r\n        \r\n    )\r\n}\r\n\r\nconst HomeContainer = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    min-height:100vh;\r\n    background-color: var(--darkest-blue);\r\n\r\n`\r\n\r\nconst SearchForm = styled.form`\r\n    display:flex;\r\n    justify-content:center;\r\n    color:var(--black);\r\n    margin:50px 0px;\r\n    \r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    background-color: #fff;\r\n    border-radius:5px;\r\n    padding:0px 10px;\r\n\r\n    input{\r\n        width:300px;\r\n        color:var(--black);\r\n        border:none;\r\n        outline:none;\r\n        padding:8px 20px;\r\n        position:relative;\r\n\r\n        ::placeholder{\r\n            color:var(--gray);\r\n        }\r\n\r\n    }\r\n\r\n    p{\r\n        cursor:pointer;\r\n    }\r\n\r\n    svg{\r\n        margin:0px 10px;\r\n        z-index:12;\r\n    }\r\n`\r\n\r\nexport default Home\r\n","import './styles.css'\nimport {HashRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\n\n\nfunction App() {\n\n  const AuthenticatedRoute = ({ ...props }) => {\n    const isUserAuthenticated = () => localStorage.getItem('key');\n\n    return (\n      isUserAuthenticated() ? <Route {...props}/> : <Redirect to=\"/Login\" />\n    )\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n        <Route path=\"/login\" component ={Login}/>\n        <AuthenticatedRoute path =\"/home\" component ={Home}/>\n      </Switch>\n    </div>\n  </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}